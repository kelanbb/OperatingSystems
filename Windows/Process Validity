Goals
-----
understandinh the heiarchy of processes / services -- understand what's normal and whats abnormal
find malicious processes that mask themselvs as normal processes
apply solution to finding malicous process and services
understanf the service configuration post-modification behaivior prior to challenge

Process validity - 


Discovering hidden process, services, and finding normal and abnormal activity -



majority fo time in dll hikacking, not writing to disk, mostly memory. actually need to look for process validty and services.


difference between process and service:
svchost is proces that hosts all services
process requires interaction to start, current ecectution of code running
  requires interaction in some form
service runs in the background with minimal to no interaction (only interaction is really staty, stop, restart)
  background, quiet

DLL
----
  library that contains 'pointers' to rescources available for other programs to interact with
    functions, executables, other libraries, etc
DLL injection / hijacking is talking the handle a program is usingand chaning it, doesnt change the actual proess but stll makes it do soemthing you want through the handle


GET PROCCESSES
---------------

tasklist
  get-member tasklist
  is a binary, built into windows, gives tasks process

get-process
  defalt gives more than tasklist
   good to verify handles (shows locations)

task manager
  taskmgr
  can have hidden running process bc of apit stuff
  
get-ciminstance
  get-siminstance win32_process | measure 
  vs
  get-prcess | measure # to find the difference in lenth of discovered process between these
  handle is rescource progam is using reaching out to another thing / trying to access
  get-ciminstance win32_process | select * # for a better format
  get-cmiinstance win32_process  where -property name -like *LSASS* | select *
    or get-ciminstance win32_process |where {$_.name -like "*LSASS*'} | select *
    
    when looking at results of proces, good to look st
      proces name, see what actual name is, see if name matches with other things inthe desc
        if ever questioning a process, can get an md5 of proces and put into a virustotal 
          okay to upload a hash than binary              
   get handle of a process   
     get-process -name lsass | select -expandproperty modules
      expand format to see all the text instead of ... at end
        get-process -name lsass | select -expandproperty Modules | format-table -warp
     tasklist /m /fi "IMAGENAME eq lsass.exe"
      
   
   
   
   GET SERVICES
   ------------
   a service runs in the backgound, if a servie is running it is a process, windows makes a service process a service by service host
    Get-WmiObject win32_process | Select-Object -Property Name, ProcessID, ParentProcessID, Path, Commandline | ft
      see svchost.exe, shows the command line used to launch a sercice, launched based on name ,not display name
        blabla...svchost.ex -k RPCSS -p launch process by name
                            -k NetworkService -s Termservice does ?
                              -k shows legitimate launched service
   get-service
   sc.exe
    service controll manager
    query foos  for showsid, every service should have sid
      sc.exe showsid Power #goes off of service name, not service display name
    sc.exe queryex type=service state=inactive #gives inactive service info, by def will show active
    get-service |select-object * gives more infomration
    get-service -property * | Where-object {$_.name -like '*DHCP*'}
      
      wmionj by name
        pathname is arg being passed to scvhost to launch
   
   
  
get-cimclass -classname * | measure ????
  cim class is grouping to help the kernel manage


SCHEDULE TASK
  schtasks.exe
    schtasks.exe /query /tn #tn is taskname
      ex: schtasks.exe /query /tn "\Microsoft\XbGameSave\XblGameSaveTask"
          schtasks.exe /query /tn "\Microsoft\XbGameSave\XblGameSaveTask" /v /fo list #verbose mode formatted into a list, shows more
  get-scheduletasks
  task scheduler
    whenever create new task, all saved in task schedule library, custom ones are directly in task scheduler library
    
    
Steps to diagnose
  look at process list
    PS> get-pocess (not a lot)
    get-ciminstance win32_process |select * | select processid, parentprocessid, name, commandline | out-file $home\desktop\processwow.txt -width 1024
      try to lok what ypu  mightve seen popup ir powershell calc
        -windowstyle hidden is no good
      get-ciminstance win32_process |select * | select processid, parentprocessid, name, commandline | where {$_.name -like "*powershell*" }
        get PID
      get-ciminstance win32_process |select * | select processid, parentprocessid, name, commandline | where{ $_.processid -lke "8848" } | fl
        work up from here, parent process
          once get to a point where it does not give more info, then have all info needed
            get-ciminstance win32_process |select * | select * | where {$_.processid -like "###"} | fl
            get-ciminstance win32_process |select * | select * | where {$_.name -like "*calc*"} | fl   *** correct...?
              work up from here
              should see powershell being run by conhost.exe
                means cmd or ps
              from here can schtasks.exe
                care about top stuff
                  ready and running
                    look at the ones that are importanr and schtasks.xe /query /tn "nameofTask" /v/ fo list
                      see what its doing, running, from what, when it sxecutes (schedule type, time)
              check any network connections
                netstat -anob (b is binary thats executing it)
                or get-nettcpconnections



































